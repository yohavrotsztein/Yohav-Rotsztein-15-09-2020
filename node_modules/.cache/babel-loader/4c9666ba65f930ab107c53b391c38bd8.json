{"ast":null,"code":"import { getCurrentWeather } from '../../API';\nconst actionTypes = {\n  ADD_FAVORITE: 'ADD_FAVORITE',\n  REMOVE_FAVORITE: 'REMOVE_FAVORITE',\n  FETCH_FAVORITES_WEATHER_SUCCESS: ' FETCH_FAVORITES_WEATHER_SUCCESS',\n  SET_FETCH_ERR: 'SET_FETCH_ERR'\n};\nexport const addFavorite = payload => ({\n  type: actionTypes.ADD_FAVORITE,\n  payload\n});\nexport const removeFavorite = payload => ({\n  type: actionTypes.REMOVE_FAVORITE,\n  payload\n});\n\nconst fetchErr = payload => ({\n  type: actionTypes.SET_FETCH_ERR,\n  payload\n});\n\nconst fetchFavoritesWeatherSuccess = payload => ({\n  type: actionTypes.FETCH_FAVORITES_WEATHER_SUCCESS,\n  payload\n});\n\nexport const fetchFavoritesWeatherAsync = favoritesList => {\n  return dispatch => {\n    // create an array (promises array) of api\n    // calls for getting current weather in location\n    const weatherCalls = favoritesList.map(city => getCurrentWeather(city.id)); //run all the calls in parallel\n\n    Promise.all(weatherCalls).then(responses => {\n      // transform the responses to an array of weather objects\n      // and save it to store\n      const weatherObjectsList = responses.map(res => res.data[0]);\n      dispatch(fetchFavoritesWeatherSuccess(weatherObjectsList));\n    }).catch(err => dispatch(fetchErr(err)));\n  };\n};","map":{"version":3,"sources":["/Users/yohav/Desktop/HeroloAssignement/src/store/actions/favorites.actions.js"],"names":["getCurrentWeather","actionTypes","ADD_FAVORITE","REMOVE_FAVORITE","FETCH_FAVORITES_WEATHER_SUCCESS","SET_FETCH_ERR","addFavorite","payload","type","removeFavorite","fetchErr","fetchFavoritesWeatherSuccess","fetchFavoritesWeatherAsync","favoritesList","dispatch","weatherCalls","map","city","id","Promise","all","then","responses","weatherObjectsList","res","data","catch","err"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,WAAlC;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,YAAY,EAAE,cADI;AAElBC,EAAAA,eAAe,EAAE,iBAFC;AAGlBC,EAAAA,+BAA+B,EAAE,kCAHf;AAIlBC,EAAAA,aAAa,EAAE;AAJG,CAApB;AAOA,OAAO,MAAMC,WAAW,GAAGC,OAAO,KAAK;AACrCC,EAAAA,IAAI,EAAEP,WAAW,CAACC,YADmB;AAErCK,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAME,cAAc,GAAGF,OAAO,KAAK;AACxCC,EAAAA,IAAI,EAAEP,WAAW,CAACE,eADsB;AAExCI,EAAAA;AAFwC,CAAL,CAA9B;;AAKP,MAAMG,QAAQ,GAAGH,OAAO,KAAK;AAC3BC,EAAAA,IAAI,EAAEP,WAAW,CAACI,aADS;AAE3BE,EAAAA;AAF2B,CAAL,CAAxB;;AAKA,MAAMI,4BAA4B,GAAGJ,OAAO,KAAK;AAC/CC,EAAAA,IAAI,EAAEP,WAAW,CAACG,+BAD6B;AAE/CG,EAAAA;AAF+C,CAAL,CAA5C;;AAKA,OAAO,MAAMK,0BAA0B,GAAGC,aAAa,IAAI;AACzD,SAAOC,QAAQ,IAAI;AACjB;AACA;AACA,UAAMC,YAAY,GAAGF,aAAa,CAC/BG,GADkB,CACdC,IAAI,IAAIjB,iBAAiB,CAACiB,IAAI,CAACC,EAAN,CADX,CAArB,CAHiB,CAMjB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ,EACGM,IADH,CACQC,SAAS,IAAI;AACf;AACA;AACA,YAAMC,kBAAkB,GAAGD,SAAS,CAACN,GAAV,CAAcQ,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAArB,CAA3B;AACAX,MAAAA,QAAQ,CAACH,4BAA4B,CAACY,kBAAD,CAA7B,CAAR;AACH,KANH,EAOGG,KAPH,CAOSC,GAAG,IAAIb,QAAQ,CAACJ,QAAQ,CAACiB,GAAD,CAAT,CAPxB;AAQD,GAfD;AAgBD,CAjBM","sourcesContent":["import { getCurrentWeather } from '../../API';\n\nconst actionTypes = {\n  ADD_FAVORITE: 'ADD_FAVORITE',\n  REMOVE_FAVORITE: 'REMOVE_FAVORITE',\n  FETCH_FAVORITES_WEATHER_SUCCESS: ' FETCH_FAVORITES_WEATHER_SUCCESS',\n  SET_FETCH_ERR: 'SET_FETCH_ERR'\n}\n\nexport const addFavorite = payload => ({\n  type: actionTypes.ADD_FAVORITE,\n  payload\n});\n\nexport const removeFavorite = payload => ({\n  type: actionTypes.REMOVE_FAVORITE,\n  payload\n});\n\nconst fetchErr = payload => ({\n  type: actionTypes.SET_FETCH_ERR,\n  payload\n});\n\nconst fetchFavoritesWeatherSuccess = payload => ({\n  type: actionTypes.FETCH_FAVORITES_WEATHER_SUCCESS,\n  payload\n});\n\nexport const fetchFavoritesWeatherAsync = favoritesList => {\n  return dispatch => {\n    // create an array (promises array) of api\n    // calls for getting current weather in location\n    const weatherCalls = favoritesList\n      .map(city => getCurrentWeather(city.id));\n\n    //run all the calls in parallel\n    Promise.all(weatherCalls)\n      .then(responses => {\n          // transform the responses to an array of weather objects\n          // and save it to store\n          const weatherObjectsList = responses.map(res => res.data[0]);\n          dispatch(fetchFavoritesWeatherSuccess(weatherObjectsList));\n      })\n      .catch(err => dispatch(fetchErr(err)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}