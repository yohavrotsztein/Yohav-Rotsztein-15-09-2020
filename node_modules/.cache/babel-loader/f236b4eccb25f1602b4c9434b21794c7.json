{"ast":null,"code":"var _jsxFileName = \"/Users/yohav/Desktop/HeroloAssignement/src/components/SearchComponent.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { setSuggestionsStatus } from '../store/actions/cities.actions';\nimport { fetchCitiesAsync } from '../store/actions/cities.actions';\n\nconst SearchComponent = ({\n  fetchCities,\n  openSuggestions,\n  setInputErr,\n  closeSuggestions\n}) => {\n  const onChangeHandle = async e => {\n    const input = e.target;\n    const regex = /[A-Za-z]/;\n\n    if (input.value.length > 0) {\n      openSuggestions();\n    } else closeSuggestions();\n\n    if (!regex.test(input.value)) {\n      if (input.value.length !== 0) {\n        setInputErr('*Only english letters allowed');\n      } else {\n        setInputErr(null);\n      }\n\n      return;\n    }\n\n    fetchCities(input.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onChangeHandle,\n    onFocus: openSuggestions,\n    onBlur: () => {\n      setInputErr(null);\n    },\n    type: \"text\",\n    autoComplete: \"off\",\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCities: str => dispatch(fetchCitiesAsync(str)),\n  openSuggestions: () => dispatch(setSuggestionsStatus(true)),\n  closeSuggestions: () => dispatch(setSuggestionsStatus(false))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchComponent);","map":{"version":3,"sources":["/Users/yohav/Desktop/HeroloAssignement/src/components/SearchComponent.js"],"names":["React","connect","FontAwesomeIcon","faSearch","setSuggestionsStatus","fetchCitiesAsync","SearchComponent","fetchCities","openSuggestions","setInputErr","closeSuggestions","onChangeHandle","e","input","target","regex","value","length","test","color","mapDispatchToProps","dispatch","str"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;AAEA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,eAAf;AAAgCC,EAAAA,WAAhC;AAA6CC,EAAAA;AAA7C,CAAD,KAAqE;AAE3F,QAAMC,cAAc,GAAG,MAAOC,CAAP,IAAa;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAhB;AACA,UAAMC,KAAK,GAAG,UAAd;;AAEA,QAAIF,KAAK,CAACG,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BT,MAAAA,eAAe;AAChB,KAFD,MAGKE,gBAAgB;;AAErB,QAAI,CAACK,KAAK,CAACG,IAAN,CAAWL,KAAK,CAACG,KAAjB,CAAL,EAA8B;AAC5B,UAAIH,KAAK,CAACG,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BR,QAAAA,WAAW,CAAC,+BAAD,CAAX;AACD,OAFD,MAGK;AACHA,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD;AACD;;AACDF,IAAAA,WAAW,CAACM,KAAK,CAACG,KAAP,CAAX;AAED,GApBD;;AAqBE,sBACE;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEhB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEE;AACE,IAAA,QAAQ,EAAEQ,cADZ;AAEE,IAAA,OAAO,EAAEH,eAFX;AAGE,IAAA,MAAM,EAAE,MAAM;AACZC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,YAAY,EAAC,KAPf;AAQE,IAAA,IAAI,EAAC,QARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAeH,CAtCD;;AAwCA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,WAAW,EAAEe,GAAG,IAAID,QAAQ,CAAChB,gBAAgB,CAACiB,GAAD,CAAjB,CADU;AAEtCd,EAAAA,eAAe,EAAE,MAAMa,QAAQ,CAACjB,oBAAoB,CAAC,IAAD,CAArB,CAFO;AAGtCM,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACjB,oBAAoB,CAAC,KAAD,CAArB;AAHM,CAAL,CAAnC;;AAOA,eAAeH,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCd,eAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport { setSuggestionsStatus } from '../store/actions/cities.actions';\nimport { fetchCitiesAsync } from '../store/actions/cities.actions';\n\n\nconst SearchComponent = ({ fetchCities, openSuggestions, setInputErr, closeSuggestions }) => {\n\n  const onChangeHandle = async (e) => {\n    const input = e.target;\n    const regex = /[A-Za-z]/;\n\n    if (input.value.length > 0) {\n      openSuggestions();\n    }\n    else closeSuggestions();\n\n    if (!regex.test(input.value)) {\n      if (input.value.length !== 0) {\n        setInputErr('*Only english letters allowed');\n      }\n      else {\n        setInputErr(null);\n      }\n      return;\n    }\n    fetchCities(input.value);\n\n  }\n    return (\n      <div style={{color :\"white\"}}>\n      <FontAwesomeIcon icon={faSearch} />\n        <input\n          onChange={onChangeHandle}\n          onFocus={openSuggestions}\n          onBlur={() => {\n            setInputErr(null);\n          }}\n          type='text'\n          autoComplete='off'\n          name='search'\n           />\n      </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCities: str => dispatch(fetchCitiesAsync(str)),\n  openSuggestions: () => dispatch(setSuggestionsStatus(true)),\n  closeSuggestions: () => dispatch(setSuggestionsStatus(false))\n\n})\n\nexport default connect(null, mapDispatchToProps)(SearchComponent);\n"]},"metadata":{},"sourceType":"module"}