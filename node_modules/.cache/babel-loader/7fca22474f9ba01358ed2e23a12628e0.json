{"ast":null,"code":"var _jsxFileName = \"/Users/yohav/Desktop/HeroloAssignement/src/pages/Favorite.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchFavoritesWeatherAsync } from '../store/actions/favorites.actions';\nimport FavoriteDisplay from '../components/FavoriteDisplay';\n\nconst FavoritesPage = ({\n  favoritesList,\n  favesWeather,\n  getFavesWeather,\n  fetchErr\n}) => {\n  // get the updated weather on favorites cities\n  useEffect(() => {\n    if (favoritesList.length > 0) {\n      getFavesWeather(favoritesList);\n    }\n  }, []);\n  let content;\n\n  if (favoritesList.length === 0) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../images/error.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, \"You don't have favorite cities yet\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, \"You might have exceeded the API call or your connection has a problem.\"));\n  } else if (fetchErr) {\n    content = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../images/error.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, \"We are sorry, a mistake occured\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, \"You might have exceeded the API call or your connection has a problem.\"));\n  } else if (favesWeather.length > 0) {\n    content = favesWeather.map((fav, i) => /*#__PURE__*/React.createElement(FavoriteDisplay, Object.assign({\n      city: favoritesList[i],\n      key: favoritesList[i].Key\n    }, fav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    })));\n  } else content = /*#__PURE__*/React.createElement(\"span\", {\n    className: \"loading\",\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }\n  }, \"Loading...\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Favorites\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, content));\n};\n\nconst mapStateToProps = state => ({\n  favoritesList: state.favorites.favesList,\n  favesWeather: state.favorites.favesWeather,\n  fetchErr: state.favorites.fetchErr\n});\n\nconst mapDispatchToProps = disptach => ({\n  getFavesWeather: favesList => disptach(fetchFavoritesWeatherAsync(favesList))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);","map":{"version":3,"sources":["/Users/yohav/Desktop/HeroloAssignement/src/pages/Favorite.js"],"names":["React","useEffect","connect","fetchFavoritesWeatherAsync","FavoriteDisplay","FavoritesPage","favoritesList","favesWeather","getFavesWeather","fetchErr","length","content","margin","require","map","fav","i","Key","display","mapStateToProps","state","favorites","favesList","mapDispatchToProps","disptach"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchFavoritesWeatherAsync } from '../store/actions/favorites.actions';\nimport FavoriteDisplay from '../components/FavoriteDisplay';\n\nconst FavoritesPage = ({ favoritesList, favesWeather, getFavesWeather, fetchErr }) => {\n\n  // get the updated weather on favorites cities\n  useEffect(() => {\n    if (favoritesList.length > 0) {\n      getFavesWeather(favoritesList);\n    }\n  }, []);\n\n\n  let content;\n  if (favoritesList.length === 0) {\n    content = <div className=\"error\" style={{margin:\"auto\"}}>\n              <img src={require(\"../images/error.png\")} />\n              <h1>You don't have favorite cities yet</h1>\n              <p>You might have exceeded the API call or your connection has a problem.</p>\n              </div>;\n  }\n  else if (fetchErr) {\n    content = <div className=\"error\" style={{margin:\"auto\"}}>\n              <img src={require(\"../images/error.png\")} />\n              <h1>We are sorry, a mistake occured</h1>\n              <p>You might have exceeded the API call or your connection has a problem.</p>\n              </div>;\n  }\n  else if (favesWeather.length > 0) {\n    content = favesWeather.map((fav, i) =>\n      <FavoriteDisplay\n        city={favoritesList[i]}\n        key={favoritesList[i].Key}\n        {...fav} />)\n  }\n  else content = <span className=\"loading\" style={{margin:\"auto\"}}>Loading...</span>\n\n  return (\n    <div className=\"favorite-display\">\n        <h1>Favorites</h1>\n        <div style={{display:\"flex\"}}>\n            {content}\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    favoritesList: state.favorites.favesList,\n    favesWeather: state.favorites.favesWeather,\n    fetchErr: state.favorites.fetchErr\n});\n\nconst mapDispatchToProps = disptach => ({\n    getFavesWeather: favesList => disptach(fetchFavoritesWeatherAsync(favesList))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage);\n"]},"metadata":{},"sourceType":"module"}