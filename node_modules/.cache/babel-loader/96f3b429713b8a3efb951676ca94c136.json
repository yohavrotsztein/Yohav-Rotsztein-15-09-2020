{"ast":null,"code":"var _jsxFileName = \"/Users/yohav/Desktop/HeroloAssignement/src/components/CitySuggest.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // redux actions\n\nimport { setSuggestionsStatus } from '../store/actions/cities.actions';\nimport { fetchWeatherAndForecast } from '../store/actions/currentWeather.actions';\n\nconst CitySuggest = ({\n  city,\n  country,\n  id,\n  getLocationWeather,\n  closeSuggestions,\n  formRef\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      getLocationWeather({\n        id,\n        cityName: city\n      });\n      formRef.current.reset();\n      closeSuggestions();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-map-marked-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, city, \",\", ' ', country));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocationWeather: city => dispatch(fetchWeatherAndForecast(city)),\n  closeSuggestions: () => dispatch(setSuggestionsStatus(false))\n});\n\nexport default connect(null, mapDispatchToProps)(CitySuggest);","map":{"version":3,"sources":["/Users/yohav/Desktop/HeroloAssignement/src/components/CitySuggest.js"],"names":["React","connect","setSuggestionsStatus","fetchWeatherAndForecast","CitySuggest","city","country","id","getLocationWeather","closeSuggestions","formRef","cityName","current","reset","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,EAAjB;AAAqBC,EAAAA,kBAArB;AAAyCC,EAAAA,gBAAzC;AAA2DC,EAAAA;AAA3D,CAAD,KAA0E;AAC5F,sBACE;AAAK,IAAA,OAAO,EAAE,MAAM;AAACF,MAAAA,kBAAkB,CAAC;AAACD,QAAAA,EAAD;AAAII,QAAAA,QAAQ,EAAEN;AAAd,OAAD,CAAlB;AACjBK,MAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAhB;AACAJ,MAAAA,gBAAgB;AAAI,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAP,OAAc,GAAd,EAAmBC,OAAnB,CAJF,CADF;AAQD,CATD;;AAWA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,kBAAkB,EAAEH,IAAI,IAAIU,QAAQ,CAACZ,uBAAuB,CAACE,IAAD,CAAxB,CADE;AAEtCI,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACb,oBAAoB,CAAC,KAAD,CAArB;AAFM,CAAL,CAAnC;;AAKA,eAAeD,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCV,WAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\n// redux actions\nimport { setSuggestionsStatus } from '../store/actions/cities.actions';\nimport { fetchWeatherAndForecast } from '../store/actions/currentWeather.actions';\n\nconst CitySuggest = ({ city, country, id, getLocationWeather, closeSuggestions, formRef }) => {\n  return (\n    <div onClick={() => {getLocationWeather({id,cityName: city});\n        formRef.current.reset()\n        closeSuggestions();}}>\n      <i className=\"fas fa-map-marked-alt\" />\n      <span>{city},{' '}{country}</span>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getLocationWeather: city => dispatch(fetchWeatherAndForecast(city)),\n  closeSuggestions: () => dispatch(setSuggestionsStatus(false))\n});\n\nexport default connect(null, mapDispatchToProps)(CitySuggest);\n"]},"metadata":{},"sourceType":"module"}