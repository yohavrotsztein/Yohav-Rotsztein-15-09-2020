{"ast":null,"code":"var _jsxFileName = \"/Users/yohav/Desktop/HeroloAssignement/src/components/FavoriteDisplay.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'; // redux actions\n\nimport { fetchWeatherAndForecast } from '../store/actions/currentWeather.actions';\n\nconst FavoriteDisplay = ({\n  getLocationWeather,\n  city,\n  Temperature,\n  WeatherText,\n  history,\n  WeatherIcon\n}) => {\n  const clickHandle = () => {\n    getLocationWeather(city);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-info\",\n    onClick: clickHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(`../images/weather-icons/${WeatherIcon}.png`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, city.cityName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, Temperature.Metric.Value, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorite-state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, WeatherText)));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocationWeather: city => dispatch(fetchWeatherAndForecast(city))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(FavoriteDisplay));","map":{"version":3,"sources":["/Users/yohav/Desktop/HeroloAssignement/src/components/FavoriteDisplay.js"],"names":["React","withRouter","connect","fetchWeatherAndForecast","FavoriteDisplay","getLocationWeather","city","Temperature","WeatherText","history","WeatherIcon","clickHandle","push","require","cityName","Metric","Value","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,yCAAxC;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,WAAzC;AAAsDC,EAAAA,OAAtD;AAA+DC,EAAAA;AAA/D,CAAD,KAAkF;AAExG,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACAG,IAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAED,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEE,OAAO,CAAE,2BAA0BH,WAAY,MAAxC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAI,CAACQ,QAAZ,CADF,CAJF,eAOE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,WAAW,CAACQ,MAAZ,CAAmBC,KAA1B,UADF,CAPF,eAUE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,WAAP,CADF,CAVF,CADF;AAgBD,CAvBD;;AAyBA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,kBAAkB,EAAEC,IAAI,IAAIY,QAAQ,CAACf,uBAAuB,CAACG,IAAD,CAAxB;AADE,CAAL,CAAnC;;AAIA,eAAeL,UAAU,CAACC,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,eAAlC,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// redux actions\nimport { fetchWeatherAndForecast } from '../store/actions/currentWeather.actions';\n\n\nconst FavoriteDisplay = ({ getLocationWeather, city, Temperature, WeatherText, history, WeatherIcon }) => {\n\n  const clickHandle = () => {\n    getLocationWeather(city);\n    history.push('/');\n  }\n\n  return (\n    <div className=\"favorite-info\" onClick={clickHandle}>\n      <div className=\"favorite-icon\">\n        <img src={require(`../images/weather-icons/${WeatherIcon}.png`)} />\n      </div>\n      <div className=\"favorite-name\">\n        <span>{city.cityName}</span>\n      </div>\n      <div className=\"favorite-temp\">\n        <span>{Temperature.Metric.Value}Â°C</span>\n      </div>\n      <div className=\"favorite-state\">\n        <span>{WeatherText}</span>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getLocationWeather: city => dispatch(fetchWeatherAndForecast(city)),\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(FavoriteDisplay));\n"]},"metadata":{},"sourceType":"module"}